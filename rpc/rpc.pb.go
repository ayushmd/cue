// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: rpc/rpc.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_rpc_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_rpc_rpc_proto_rawDescGZIP(), []int{0}
}

type QueueNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=QueueName,proto3" json:"QueueName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueNameRequest) Reset() {
	*x = QueueNameRequest{}
	mi := &file_rpc_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueNameRequest) ProtoMessage() {}

func (x *QueueNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueNameRequest.ProtoReflect.Descriptor instead.
func (*QueueNameRequest) Descriptor() ([]byte, []int) {
	return file_rpc_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *QueueNameRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

type AckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckRequest) Reset() {
	*x = AckRequest{}
	mi := &file_rpc_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest) ProtoMessage() {}

func (x *AckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest.ProtoReflect.Descriptor instead.
func (*AckRequest) Descriptor() ([]byte, []int) {
	return file_rpc_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *AckRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_rpc_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_rpc_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []string               `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueueResponse) Reset() {
	*x = ListQueueResponse{}
	mi := &file_rpc_rpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueueResponse) ProtoMessage() {}

func (x *ListQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_rpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueueResponse.ProtoReflect.Descriptor instead.
func (*ListQueueResponse) Descriptor() ([]byte, []int) {
	return file_rpc_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *ListQueueResponse) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListQueueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=QueueName,proto3" json:"QueueName,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Ttl           int64                  `protobuf:"varint,3,opt,name=Ttl,proto3" json:"Ttl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemRequest) Reset() {
	*x = ItemRequest{}
	mi := &file_rpc_rpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRequest) ProtoMessage() {}

func (x *ItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_rpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRequest.ProtoReflect.Descriptor instead.
func (*ItemRequest) Descriptor() ([]byte, []int) {
	return file_rpc_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *ItemRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ItemRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ItemRequest) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type ItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Ack           bool                   `protobuf:"varint,3,opt,name=Ack,proto3" json:"Ack,omitempty"`
	Success       bool                   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemResponse) Reset() {
	*x = ItemResponse{}
	mi := &file_rpc_rpc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemResponse) ProtoMessage() {}

func (x *ItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_rpc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemResponse.ProtoReflect.Descriptor instead.
func (*ItemResponse) Descriptor() ([]byte, []int) {
	return file_rpc_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *ItemResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ItemResponse) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

func (x *ItemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_rpc_rpc_proto protoreflect.FileDescriptor

const file_rpc_rpc_proto_rawDesc = "" +
	"\n" +
	"\rrpc/rpc.proto\"\a\n" +
	"\x05Empty\"0\n" +
	"\x10QueueNameRequest\x12\x1c\n" +
	"\tQueueName\x18\x01 \x01(\tR\tQueueName\"\x1c\n" +
	"\n" +
	"AckRequest\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x03R\x02Id\"$\n" +
	"\bResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\"A\n" +
	"\x11ListQueueResponse\x12\x12\n" +
	"\x04Data\x18\x01 \x03(\tR\x04Data\x12\x18\n" +
	"\aSuccess\x18\x02 \x01(\bR\aSuccess\"Q\n" +
	"\vItemRequest\x12\x1c\n" +
	"\tQueueName\x18\x01 \x01(\tR\tQueueName\x12\x12\n" +
	"\x04Data\x18\x02 \x01(\fR\x04Data\x12\x10\n" +
	"\x03Ttl\x18\x03 \x01(\x03R\x03Ttl\"^\n" +
	"\fItemResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04Data\x18\x02 \x01(\fR\x04Data\x12\x10\n" +
	"\x03Ack\x18\x03 \x01(\bR\x03Ack\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess2\xa3\x02\n" +
	"\x10SchedulerService\x12\x19\n" +
	"\x04Ping\x12\x06.Empty\x1a\t.Response\x12,\n" +
	"\x06Listen\x12\x11.QueueNameRequest\x1a\r.ItemResponse0\x01\x12#\n" +
	"\bPushItem\x12\f.ItemRequest\x1a\t.Response\x12\x1d\n" +
	"\x03Ack\x12\v.AckRequest\x1a\t.Response\x12+\n" +
	"\vCreateQueue\x12\x11.QueueNameRequest\x1a\t.Response\x12(\n" +
	"\n" +
	"ListQueues\x12\x06.Empty\x1a\x12.ListQueueResponse\x12+\n" +
	"\vDeleteQueue\x12\x11.QueueNameRequest\x1a\t.ResponseB\x1cZ\x1agithub.com/ayushmd/cue/rpcb\x06proto3"

var (
	file_rpc_rpc_proto_rawDescOnce sync.Once
	file_rpc_rpc_proto_rawDescData []byte
)

func file_rpc_rpc_proto_rawDescGZIP() []byte {
	file_rpc_rpc_proto_rawDescOnce.Do(func() {
		file_rpc_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_rpc_proto_rawDesc), len(file_rpc_rpc_proto_rawDesc)))
	})
	return file_rpc_rpc_proto_rawDescData
}

var file_rpc_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_rpc_rpc_proto_goTypes = []any{
	(*Empty)(nil),             // 0: Empty
	(*QueueNameRequest)(nil),  // 1: QueueNameRequest
	(*AckRequest)(nil),        // 2: AckRequest
	(*Response)(nil),          // 3: Response
	(*ListQueueResponse)(nil), // 4: ListQueueResponse
	(*ItemRequest)(nil),       // 5: ItemRequest
	(*ItemResponse)(nil),      // 6: ItemResponse
}
var file_rpc_rpc_proto_depIdxs = []int32{
	0, // 0: SchedulerService.Ping:input_type -> Empty
	1, // 1: SchedulerService.Listen:input_type -> QueueNameRequest
	5, // 2: SchedulerService.PushItem:input_type -> ItemRequest
	2, // 3: SchedulerService.Ack:input_type -> AckRequest
	1, // 4: SchedulerService.CreateQueue:input_type -> QueueNameRequest
	0, // 5: SchedulerService.ListQueues:input_type -> Empty
	1, // 6: SchedulerService.DeleteQueue:input_type -> QueueNameRequest
	3, // 7: SchedulerService.Ping:output_type -> Response
	6, // 8: SchedulerService.Listen:output_type -> ItemResponse
	3, // 9: SchedulerService.PushItem:output_type -> Response
	3, // 10: SchedulerService.Ack:output_type -> Response
	3, // 11: SchedulerService.CreateQueue:output_type -> Response
	4, // 12: SchedulerService.ListQueues:output_type -> ListQueueResponse
	3, // 13: SchedulerService.DeleteQueue:output_type -> Response
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rpc_rpc_proto_init() }
func file_rpc_rpc_proto_init() {
	if File_rpc_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_rpc_proto_rawDesc), len(file_rpc_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_rpc_proto_goTypes,
		DependencyIndexes: file_rpc_rpc_proto_depIdxs,
		MessageInfos:      file_rpc_rpc_proto_msgTypes,
	}.Build()
	File_rpc_rpc_proto = out.File
	file_rpc_rpc_proto_goTypes = nil
	file_rpc_rpc_proto_depIdxs = nil
}
